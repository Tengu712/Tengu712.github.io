---
import Layout from "../layouts/Layout.astro";
import PostLink from "../components/PostLink.astro";
import { getId } from "../utils";

const posts = (await Astro.glob('./posts/*.mdx'))
	.sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());
const genreAndTags = posts
	.map(post => {
		return {
			genre: post.frontmatter.genre,
			tags: post.frontmatter.tags,
		}
	})
---

<Layout title="天狗会議録" topImage="https://img.skdassoc.work/top.png">
	<div id="filtering"></div>
	<div id="list">
		{posts
			.map(post => (<PostLink
				id={getId(post.file)}
				title={post.frontmatter.title}
				genre={post.frontmatter.genre}
				tags={post.frontmatter.tags}
				date={post.frontmatter.date}
			/>))}
	</div>
</Layout>
<script is:inline define:vars={{genreAndTags}}>
	const target = new URL(decodeURIComponent(document.location.href)).searchParams.get("filter") ?? ""
	if (target.length > 0) {
		const filtering = document.getElementById("filtering")
		filtering.innerText = `"${target}"を表示中`
		const list = document.getElementById("list")
		const removing = []
		for (let i = 0; i < genreAndTags.length; ++i) {
			if (genreAndTags[i].genre !== target && !genreAndTags[i].tags.includes(target)) {
				removing.push(list.children[i])
			}
		}
		for (const elem of removing) {
			elem.remove()
		}
	}
</script>
<style>
	#filtering {
		text-align: center;
		margin-bottom: 1rem;
	}
</style>
